create table &TOOLKIT._event (
  fev_id varchar2(26 char), 
	fev_fcl_id varchar2(50 char), 
	fev_msg_id varchar2(50 char), 
	fev_name varchar2(50 char), 
	fev_description varchar2(200 char), 
	fev_command varchar2(50 char), 
	fev_active char(1 byte) default 'Y',
  fev_button_highlight char(1 byte) default 'N',
  fev_confirm_message varchar2(200 char),
  fev_button_icon varchar2(50 char),
  fev_raised_by_user char(1 byte) default 'N',
  constraint pk_&TOOLKIT._event primary key (fev_id, fev_fcl_id) enable,
  constraint fk_fev_fcl_id foreign key (fev_fcl_id)
	  references &TOOLKIT._class (fcl_id),
  /*constraint fk_fev_msg_id foreign key (fev_msg_id)
	  references message (message_id),*/
  constraint nn_fev_command check (fev_command is not null),
  constraint nn_fev_name check (fev_name is not null),
  constraint nn_fev_msg_id check (fev_msg_id is not null)
) organization index;

comment on table &TOOLKIT._event  is 'table to store &TOOLKIT. status definitions per class type';
comment on column &TOOLKIT._event.fev_id is 'primary key';
comment on column &TOOLKIT._event.fev_fcl_id is 'primary key, reference to &TOOLKIT._CLASS';
comment on column &TOOLKIT._event.fev_msg_id is 'name of a MESSAGE to be used for logging, reference to MESSAGE';
comment on column &TOOLKIT._event.fev_name is 'descriptive name for LOV';
comment on column &TOOLKIT._event.fev_description is 'optional description';
comment on column &TOOLKIT._event.fev_command is 'label for control item (fi button)';
comment on column &TOOLKIT._event.fev_active is 'flag to indicate whether status is in use actually.';
comment on column &TOOLKIT._event.fev_button_highlight is 'flag to indicate whether command button shall be highlighted.';
comment on column &TOOLKIT._event.fev_confirm_message is 'optional message that is shown before action takes place.';
comment on column &TOOLKIT._event.fev_button_icon is 'optional css class resp. url to an icon.';
comment on column &TOOLKIT._event.fev_raised_by_user is 'flag to indicate whether command is raisable by user (in contrast to events which are raised by jobs only).';


create index idx_fk_fev_fcl_id on &TOOLKIT._event (fev_fcl_id, fev_id);
create index idx_fk_fev_msg_id on &TOOLKIT._event (fev_msg_id);

merge into &TOOLKIT._event e
using (select 'ERROR' fev_id,
              '&TOOLKIT.' fev_fcl_id,
              '&TOOLKIT._EVENT_RAISED' fev_msg_id,
              'Error occurred' fev_name,
              'Processing is stopped' fev_description,
              'Error occurred' fev_command,
              'Y' fev_active
         from dual
        union all
       select 'INITIALIZE', '&TOOLKIT.', '&TOOLKIT._EVENT_RAISED', 'initialize &TOOLKIT.', 'Instance is initialized', 'Initialize', 'Y' from dual union all
       select 'NIL', '&TOOLKIT.', '&TOOLKIT._EVENT_RAISED', 'No action', 'no further actions', 'No action', 'Y' from dual) v
   on (e.fev_id = v.fev_id)
 when not matched then insert (
        fev_id, fev_fcl_id, fev_msg_id, fev_name, fev_description, fev_command, fev_active)
      values (
        v.fev_id, v.fev_fcl_id, v.fev_msg_id, v.fev_name, v.fev_description, v.fev_command, v.fev_active);

commit;
